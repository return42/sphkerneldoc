.. -*- coding: utf-8; mode: rst -*-
.. src-file: sound/soc/codecs/rl6231.c

.. _`rl6231_get_pre_div`:

rl6231_get_pre_div
==================

.. c:function:: int rl6231_get_pre_div(struct regmap *map, unsigned int reg, int sft)

    Return the value of pre divider.

    :param map:
        map for setting.
    :type map: struct regmap \*

    :param reg:
        register.
    :type reg: unsigned int

    :param sft:
        shift.
    :type sft: int

.. _`rl6231_get_pre_div.description`:

Description
-----------

Return the value of pre divider from given register value.
Return negative error code for unexpected register value.

.. _`rl6231_calc_dmic_clk`:

rl6231_calc_dmic_clk
====================

.. c:function:: int rl6231_calc_dmic_clk(int rate)

    Calculate the frequency divider parameter of dmic.

    :param rate:
        base clock rate.
    :type rate: int

.. _`rl6231_calc_dmic_clk.description`:

Description
-----------

Choose divider parameter that gives the highest possible DMIC frequency in
1MHz - 3MHz range.

.. _`rl6231_pll_calc`:

rl6231_pll_calc
===============

.. c:function:: int rl6231_pll_calc(const unsigned int freq_in, const unsigned int freq_out, struct rl6231_pll_code *pll_code)

    Calcualte PLL M/N/K code.

    :param freq_in:
        external clock provided to codec.
    :type freq_in: const unsigned int

    :param freq_out:
        target clock which codec works on.
    :type freq_out: const unsigned int

    :param pll_code:
        Pointer to structure with M, N, K and bypass flag.
    :type pll_code: struct rl6231_pll_code \*

.. _`rl6231_pll_calc.description`:

Description
-----------

Calcualte M/N/K code to configure PLL for codec.

Returns 0 for success or negative error code.

.. This file was automatic generated / don't edit.

