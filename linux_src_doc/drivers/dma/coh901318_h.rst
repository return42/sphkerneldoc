.. -*- coding: utf-8; mode: rst -*-
.. src-file: drivers/dma/coh901318.h

.. _`coh901318_lli`:

struct coh901318_lli
====================

.. c:type:: struct coh901318_lli

    linked list item for DMAC

.. _`coh901318_lli.definition`:

Definition
----------

.. code-block:: c

    struct coh901318_lli {
        u32 control;
        dma_addr_t src_addr;
        dma_addr_t dst_addr;
        dma_addr_t link_addr;
        void *virt_link_addr;
        dma_addr_t phy_this;
    }

.. _`coh901318_lli.members`:

Members
-------

control
    control settings for DMAC

src_addr
    transfer source address

dst_addr
    transfer destination address

link_addr
    physical address to next lli

virt_link_addr
    virtual address of next lli (only used by pool_free)

phy_this
    physical address of current lli (only used by pool_free)

.. _`coh901318_pool_create`:

coh901318_pool_create
=====================

.. c:function:: int coh901318_pool_create(struct coh901318_pool *pool, struct device *dev, size_t lli_nbr, size_t align)

    Creates an dma pool for lli:s

    :param pool:
        pool handle
    :type pool: struct coh901318_pool \*

    :param dev:
        dma device
    :type dev: struct device \*

    :param lli_nbr:
        number of lli:s in the pool
    :type lli_nbr: size_t

    :param align:
        *undescribed*
    :type align: size_t

.. _`coh901318_pool_destroy`:

coh901318_pool_destroy
======================

.. c:function:: int coh901318_pool_destroy(struct coh901318_pool *pool)

    Destroys the dma pool

    :param pool:
        pool handle
        returns 0 on success otherwise none zero
    :type pool: struct coh901318_pool \*

.. _`coh901318_lli_alloc`:

coh901318_lli_alloc
===================

.. c:function:: struct coh901318_lli *coh901318_lli_alloc(struct coh901318_pool *pool, unsigned int len)

    Allocates a linked list

    :param pool:
        pool handle
    :type pool: struct coh901318_pool \*

    :param len:
        length to list
    :type len: unsigned int

.. _`coh901318_lli_alloc.return`:

Return
------

none NULL if success otherwise NULL

.. _`coh901318_lli_free`:

coh901318_lli_free
==================

.. c:function:: void coh901318_lli_free(struct coh901318_pool *pool, struct coh901318_lli **lli)

    Returns the linked list items to the pool

    :param pool:
        pool handle
    :type pool: struct coh901318_pool \*

    :param lli:
        reference to lli pointer to be freed
    :type lli: struct coh901318_lli \*\*

.. _`coh901318_lli_fill_memcpy`:

coh901318_lli_fill_memcpy
=========================

.. c:function:: int coh901318_lli_fill_memcpy(struct coh901318_pool *pool, struct coh901318_lli *lli, dma_addr_t src, unsigned int size, dma_addr_t dst, u32 ctrl_chained, u32 ctrl_last)

    Prepares the lli:s for dma memcpy

    :param pool:
        pool handle
    :type pool: struct coh901318_pool \*

    :param lli:
        allocated lli
    :type lli: struct coh901318_lli \*

    :param src:
        src address
    :type src: dma_addr_t

    :param size:
        transfer size
    :type size: unsigned int

    :param dst:
        destination address
    :type dst: dma_addr_t

    :param ctrl_chained:
        ctrl for chained lli
    :type ctrl_chained: u32

    :param ctrl_last:
        ctrl for the last lli
        returns number of CPU interrupts for the lli, negative on error.
    :type ctrl_last: u32

.. _`coh901318_lli_fill_single`:

coh901318_lli_fill_single
=========================

.. c:function:: int coh901318_lli_fill_single(struct coh901318_pool *pool, struct coh901318_lli *lli, dma_addr_t buf, unsigned int size, dma_addr_t dev_addr, u32 ctrl_chained, u32 ctrl_last, enum dma_transfer_direction dir)

    Prepares the lli:s for dma single transfer

    :param pool:
        pool handle
    :type pool: struct coh901318_pool \*

    :param lli:
        allocated lli
    :type lli: struct coh901318_lli \*

    :param buf:
        transfer buffer
    :type buf: dma_addr_t

    :param size:
        transfer size
    :type size: unsigned int

    :param dev_addr:
        address of periphal
    :type dev_addr: dma_addr_t

    :param ctrl_chained:
        ctrl for chained lli
    :type ctrl_chained: u32

    :param ctrl_last:
        ctrl for the last lli
    :type ctrl_last: u32

    :param dir:
        direction of transfer (to or from device)
        returns number of CPU interrupts for the lli, negative on error.
    :type dir: enum dma_transfer_direction

.. _`coh901318_lli_fill_sg`:

coh901318_lli_fill_sg
=====================

.. c:function:: int coh901318_lli_fill_sg(struct coh901318_pool *pool, struct coh901318_lli *lli, struct scatterlist *sg, unsigned int nents, dma_addr_t dev_addr, u32 ctrl_chained, u32 ctrl, u32 ctrl_last, enum dma_transfer_direction dir, u32 ctrl_irq_mask)

    Prepares the lli:s for dma scatter list transfer

    :param pool:
        pool handle
    :type pool: struct coh901318_pool \*

    :param lli:
        allocated lli
    :type lli: struct coh901318_lli \*

    :param sg:
        scatter gather list
    :type sg: struct scatterlist \*

    :param nents:
        number of entries in sg
    :type nents: unsigned int

    :param dev_addr:
        address of periphal
    :type dev_addr: dma_addr_t

    :param ctrl_chained:
        ctrl for chained lli
    :type ctrl_chained: u32

    :param ctrl:
        ctrl of middle lli
    :type ctrl: u32

    :param ctrl_last:
        ctrl for the last lli
    :type ctrl_last: u32

    :param dir:
        direction of transfer (to or from device)
    :type dir: enum dma_transfer_direction

    :param ctrl_irq_mask:
        ctrl mask for CPU interrupt
        returns number of CPU interrupts for the lli, negative on error.
    :type ctrl_irq_mask: u32

.. This file was automatic generated / don't edit.

