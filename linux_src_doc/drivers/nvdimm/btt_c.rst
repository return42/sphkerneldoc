.. -*- coding: utf-8; mode: rst -*-
.. src-file: drivers/nvdimm/btt.c

.. _`btt_init`:

btt_init
========

.. c:function:: struct btt *btt_init(struct nd_btt *nd_btt, unsigned long long rawsize, u32 lbasize, u8 *uuid, struct nd_region *nd_region)

    initialize a block translation table for the given device

    :param nd_btt:
        device with BTT geometry and backing device info
    :type nd_btt: struct nd_btt \*

    :param rawsize:
        raw size in bytes of the backing device
    :type rawsize: unsigned long long

    :param lbasize:
        lba size of the backing device
    :type lbasize: u32

    :param uuid:
        A uuid for the backing device - this is stored on media
    :type uuid: u8 \*

    :param nd_region:
        *undescribed*
    :type nd_region: struct nd_region \*

.. _`btt_init.description`:

Description
-----------

Initialize a Block Translation Table on a backing device to provide
single sector power fail atomicity.

.. _`btt_init.context`:

Context
-------

Might sleep.

.. _`btt_init.return`:

Return
------

Pointer to a new struct btt on success, NULL on failure.

.. _`btt_fini`:

btt_fini
========

.. c:function:: void btt_fini(struct btt *btt)

    de-initialize a BTT

    :param btt:
        the BTT handle that was generated by btt_init
    :type btt: struct btt \*

.. _`btt_fini.description`:

Description
-----------

De-initialize a Block Translation Table on device removal

.. _`btt_fini.context`:

Context
-------

Might sleep.

.. This file was automatic generated / don't edit.

