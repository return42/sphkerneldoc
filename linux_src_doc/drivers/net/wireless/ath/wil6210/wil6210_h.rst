.. -*- coding: utf-8; mode: rst -*-
.. src-file: drivers/net/wireless/ath/wil6210/wil6210.h

.. _`wil_get_bits`:

WIL_GET_BITS
============

.. c:function:: u32 WIL_GET_BITS(u32 x, int b0, int b1)

    \ ``b1``\ ] (inclusive) from the value \ ``x``\  it should be \ ``b0``\  <= \ ``b1``\ , or result is incorrect

    :param x:
        *undescribed*
    :type x: u32

    :param b0:
        *undescribed*
    :type b0: int

    :param b1:
        *undescribed*
    :type b1: int

.. _`mk_cidxtid`:

mk_cidxtid
==========

.. c:function:: u8 mk_cidxtid(u8 cid, u8 tid)

    construct \ ``cidxtid``\  field

    :param cid:
        CID value
    :type cid: u8

    :param tid:
        TID value
    :type tid: u8

.. _`mk_cidxtid.description`:

Description
-----------

\ ``cidxtid``\  field encoded as bits 0..3 - CID; 4..7 - TID

.. _`parse_cidxtid`:

parse_cidxtid
=============

.. c:function:: void parse_cidxtid(u8 cidxtid, u8 *cid, u8 *tid)

    parse \ ``cidxtid``\  field

    :param cidxtid:
        *undescribed*
    :type cidxtid: u8

    :param cid:
        store CID value here
    :type cid: u8 \*

    :param tid:
        store TID value here
    :type tid: u8 \*

.. _`parse_cidxtid.description`:

Description
-----------

\ ``cidxtid``\  field encoded as bits 0..3 - CID; 4..7 - TID

.. _`wil_cid_valid`:

wil_cid_valid
=============

.. c:function:: bool wil_cid_valid(u8 cid)

    check cid is valid

    :param cid:
        CID value
    :type cid: u8

.. _`wil_ctx`:

struct wil_ctx
==============

.. c:type:: struct wil_ctx

    software context for ring descriptor

.. _`wil_ctx.definition`:

Definition
----------

.. code-block:: c

    struct wil_ctx {
        struct sk_buff *skb;
        u8 nr_frags;
        u8 mapped_as;
    }

.. _`wil_ctx.members`:

Members
-------

skb
    *undescribed*

nr_frags
    *undescribed*

mapped_as
    *undescribed*

.. _`wil_txrx_ops`:

struct wil_txrx_ops
===================

.. c:type:: struct wil_txrx_ops

    different TX/RX ops for legacy and enhanced DMA flow

.. _`wil_txrx_ops.definition`:

Definition
----------

.. code-block:: c

    struct wil_txrx_ops {
        void (*configure_interrupt_moderation)(struct wil6210_priv *wil);
        int (*ring_init_tx)(struct wil6210_vif *vif, int ring_id, int size, int cid, int tid);
        void (*ring_fini_tx)(struct wil6210_priv *wil, struct wil_ring *ring);
        int (*ring_init_bcast)(struct wil6210_vif *vif, int id, int size);
        int (*tx_init)(struct wil6210_priv *wil);
        void (*tx_fini)(struct wil6210_priv *wil);
        int (*tx_desc_map)(union wil_tx_desc *desc, dma_addr_t pa, u32 len, int ring_index);
        void (*tx_desc_unmap)(struct device *dev,union wil_tx_desc *desc, struct wil_ctx *ctx);
        int (*tx_ring_tso)(struct wil6210_priv *wil, struct wil6210_vif *vif, struct wil_ring *ring, struct sk_buff *skb);
        int (*tx_ring_modify)(struct wil6210_vif *vif, int ring_id, int cid, int tid);
        irqreturn_t (*irq_tx)(int irq, void *cookie);
        int (*rx_init)(struct wil6210_priv *wil, u16 ring_size);
        void (*rx_fini)(struct wil6210_priv *wil);
        int (*wmi_addba_rx_resp)(struct wil6210_priv *wil, u8 mid, u8 cid,u8 tid, u8 token, u16 status, bool amsdu, u16 agg_wsize, u16 timeout);
        void (*get_reorder_params)(struct wil6210_priv *wil,struct sk_buff *skb, int *tid, int *cid, int *mid, u16 *seq, int *mcast, int *retry);
        void (*get_netif_rx_params)(struct sk_buff *skb, int *cid, int *security);
        int (*rx_crypto_check)(struct wil6210_priv *wil, struct sk_buff *skb);
        int (*rx_error_check)(struct wil6210_priv *wil, struct sk_buff *skb, struct wil_net_stats *stats);
        bool (*is_rx_idle)(struct wil6210_priv *wil);
        irqreturn_t (*irq_rx)(int irq, void *cookie);
    }

.. _`wil_txrx_ops.members`:

Members
-------

configure_interrupt_moderation
    *undescribed*

ring_init_tx
    *undescribed*

ring_fini_tx
    *undescribed*

ring_init_bcast
    *undescribed*

tx_init
    *undescribed*

tx_fini
    *undescribed*

tx_desc_map
    *undescribed*

tx_desc_unmap
    *undescribed*

tx_ring_tso
    *undescribed*

tx_ring_modify
    *undescribed*

irq_tx
    *undescribed*

rx_init
    *undescribed*

rx_fini
    *undescribed*

wmi_addba_rx_resp
    *undescribed*

get_reorder_params
    *undescribed*

get_netif_rx_params
    *undescribed*

rx_crypto_check
    *undescribed*

rx_error_check
    *undescribed*

is_rx_idle
    *undescribed*

irq_rx
    *undescribed*

.. _`wil_tid_ampdu_rx`:

struct wil_tid_ampdu_rx
=======================

.. c:type:: struct wil_tid_ampdu_rx

    TID aggregation information (Rx).

.. _`wil_tid_ampdu_rx.definition`:

Definition
----------

.. code-block:: c

    struct wil_tid_ampdu_rx {
        struct sk_buff **reorder_buf;
        unsigned long last_rx;
        u16 head_seq_num;
        u16 stored_mpdu_num;
        u16 ssn;
        u16 buf_size;
        u16 ssn_last_drop;
        unsigned long long total;
        unsigned long long drop_dup;
        unsigned long long drop_old;
        bool first_time;
        u16 mcast_last_seq;
        unsigned long long drop_dup_mcast;
    }

.. _`wil_tid_ampdu_rx.members`:

Members
-------

reorder_buf
    buffer to reorder incoming aggregated MPDUs

last_rx
    jiffies of last rx activity

head_seq_num
    head sequence number in reordering buffer.

stored_mpdu_num
    number of MPDUs in reordering buffer

ssn
    Starting Sequence Number expected to be aggregated.

buf_size
    buffer size for incoming A-MPDUs

ssn_last_drop
    SSN of the last dropped frame

total
    total number of processed incoming frames

drop_dup
    duplicate frames dropped for this reorder buffer

drop_old
    old frames dropped for this reorder buffer

first_time
    true when this buffer used 1-st time

mcast_last_seq
    sequence number (SN) of last received multicast packet

drop_dup_mcast
    duplicate multicast frames dropped for this reorder buffer

.. _`wil_tid_crypto_rx_single`:

struct wil_tid_crypto_rx_single
===============================

.. c:type:: struct wil_tid_crypto_rx_single

    TID crypto information (Rx).

.. _`wil_tid_crypto_rx_single.definition`:

Definition
----------

.. code-block:: c

    struct wil_tid_crypto_rx_single {
        u8 pn[IEEE80211_GCMP_PN_LEN];
        bool key_set;
    }

.. _`wil_tid_crypto_rx_single.members`:

Members
-------

pn
    GCMP PN for the session

key_set
    valid key present

.. _`wil_sta_info`:

struct wil_sta_info
===================

.. c:type:: struct wil_sta_info

    data for peer

.. _`wil_sta_info.definition`:

Definition
----------

.. code-block:: c

    struct wil_sta_info {
        u8 addr[ETH_ALEN];
        u8 mid;
        enum wil_sta_status status;
        struct wil_net_stats stats;
        u64 *tx_latency_bins;
        struct wmi_link_stats_basic fw_stats_basic;
        struct wil_tid_ampdu_rx *tid_rx[WIL_STA_TID_NUM];
        spinlock_t tid_rx_lock;
        unsigned long tid_rx_timer_expired[BITS_TO_LONGS(WIL_STA_TID_NUM)];
        unsigned long tid_rx_stop_requested[BITS_TO_LONGS(WIL_STA_TID_NUM)];
        struct wil_tid_crypto_rx tid_crypto_rx[WIL_STA_TID_NUM];
        struct wil_tid_crypto_rx group_crypto_rx;
        u8 aid;
    }

.. _`wil_sta_info.members`:

Members
-------

addr
    *undescribed*

mid
    *undescribed*

status
    *undescribed*

stats
    *undescribed*

tx_latency_bins
    *undescribed*

fw_stats_basic
    *undescribed*

tid_rx
    *undescribed*

tid_rx_lock
    *undescribed*

tid_rx_timer_expired
    *undescribed*

tid_rx_stop_requested
    *undescribed*

tid_crypto_rx
    *undescribed*

group_crypto_rx
    *undescribed*

aid
    *undescribed*

.. _`wil_sta_info.description`:

Description
-----------

Peer identified by its CID (connection ID)
NIC performs beam forming for each peer;
if no beam forming done, frame exchange is not
possible.

.. This file was automatic generated / don't edit.

