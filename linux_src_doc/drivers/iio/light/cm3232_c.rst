.. -*- coding: utf-8; mode: rst -*-
.. src-file: drivers/iio/light/cm3232.c

.. _`cm3232_reg_init`:

cm3232_reg_init
===============

.. c:function:: int cm3232_reg_init(struct cm3232_chip *chip)

    Initialize CM3232

    :param chip:
        pointer of struct cm3232_chip.
    :type chip: struct cm3232_chip \*

.. _`cm3232_reg_init.description`:

Description
-----------

Check and initialize CM3232 ambient light sensor.

.. _`cm3232_reg_init.return`:

Return
------

0 for success; otherwise for error code.

.. _`cm3232_read_als_it`:

cm3232_read_als_it
==================

.. c:function:: int cm3232_read_als_it(struct cm3232_chip *chip, int *val, int *val2)

    Get sensor integration time

    :param chip:
        pointer of struct cm3232_chip
    :type chip: struct cm3232_chip \*

    :param val:
        pointer of int to load the integration (sec).
    :type val: int \*

    :param val2:
        pointer of int to load the integration time (microsecond).
    :type val2: int \*

.. _`cm3232_read_als_it.description`:

Description
-----------

Report the current integration time.

.. _`cm3232_read_als_it.return`:

Return
------

IIO_VAL_INT_PLUS_MICRO for success, otherwise -EINVAL.

.. _`cm3232_write_als_it`:

cm3232_write_als_it
===================

.. c:function:: int cm3232_write_als_it(struct cm3232_chip *chip, int val, int val2)

    Write sensor integration time

    :param chip:
        pointer of struct cm3232_chip.
    :type chip: struct cm3232_chip \*

    :param val:
        integration time in second.
    :type val: int

    :param val2:
        integration time in microsecond.
    :type val2: int

.. _`cm3232_write_als_it.description`:

Description
-----------

Convert integration time to sensor value.

.. _`cm3232_write_als_it.return`:

Return
------

i2c_smbus_write_byte_data command return value.

.. _`cm3232_get_lux`:

cm3232_get_lux
==============

.. c:function:: int cm3232_get_lux(struct cm3232_chip *chip)

    report current lux value

    :param chip:
        pointer of struct cm3232_chip.
    :type chip: struct cm3232_chip \*

.. _`cm3232_get_lux.description`:

Description
-----------

Convert sensor data to lux.  It depends on integration
time and calibscale variable.

.. _`cm3232_get_lux.return`:

Return
------

Zero or positive value is lux, otherwise error code.

.. _`cm3232_get_it_available`:

cm3232_get_it_available
=======================

.. c:function:: ssize_t cm3232_get_it_available(struct device *dev, struct device_attribute *attr, char *buf)

    Get available ALS IT value

    :param dev:
        pointer of struct device.
    :type dev: struct device \*

    :param attr:
        pointer of struct device_attribute.
    :type attr: struct device_attribute \*

    :param buf:
        pointer of return string buffer.
    :type buf: char \*

.. _`cm3232_get_it_available.description`:

Description
-----------

Display the available integration time in second.

.. _`cm3232_get_it_available.return`:

Return
------

string length.

.. This file was automatic generated / don't edit.

