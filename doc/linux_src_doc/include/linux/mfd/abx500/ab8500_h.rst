.. -*- coding: utf-8; mode: rst -*-

========
ab8500.h
========


.. _`ab8500`:

struct ab8500
=============

.. c:type:: ab8500

    ab8500 internal structure


.. _`ab8500.definition`:

Definition
----------

.. code-block:: c

  struct ab8500 {
    struct device * dev;
    struct mutex lock;
    struct mutex irq_lock;
    atomic_t transfer_ongoing;
    int irq;
    enum ab8500_version version;
    u8 chip_id;
    int (* write) (struct ab8500 *ab8500, u16 addr, u8 data);
    int (* write_masked) (struct ab8500 *ab8500, u16 addr, u8 mask, u8 data);
    int (* read) (struct ab8500 *ab8500, u16 addr);
    unsigned long tx_buf[4];
    unsigned long rx_buf[4];
    u8 * mask;
    u8 * oldmask;
    int mask_size;
    const int * irq_reg_offset;
  };


.. _`ab8500.members`:

Members
-------

:``dev``:
    parent device

:``lock``:
    read/write operations lock

:``irq_lock``:
    genirq bus lock

:``transfer_ongoing``:
    0 if no transfer ongoing

:``irq``:
    irq line

:``version``:
    chip version id (e.g. ab8500 or ab9540)

:``chip_id``:
    chip revision id

:``write``:
    register write

:``write_masked``:
    masked register write

:``read``:
    register read

:``tx_buf[4]``:
    tx buf for SPI

:``rx_buf[4]``:
    rx buf for SPI

:``mask``:
    cache of IRQ regs for bus lock

:``oldmask``:
    cache of previous IRQ regs for bus lock

:``mask_size``:
    Actual number of valid entries in mask[], oldmask[] and
    irq_reg_offset

:``irq_reg_offset``:
    Array of offsets into IRQ registers




.. _`ab8500_platform_data`:

struct ab8500_platform_data
===========================

.. c:type:: ab8500_platform_data

    AB8500 platform data


.. _`ab8500_platform_data.definition`:

Definition
----------

.. code-block:: c

  struct ab8500_platform_data {
    void (* init) (struct ab8500 *);
    struct ab8500_regulator_platform_data * regulator;
  };


.. _`ab8500_platform_data.members`:

Members
-------

:``init``:
    board-specific initialization after detection of ab8500

:``regulator``:
    machine-specific constraints for regulators


