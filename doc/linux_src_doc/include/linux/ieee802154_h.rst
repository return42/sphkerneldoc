.. -*- coding: utf-8; mode: rst -*-

============
ieee802154.h
============


.. _`ieee802154_is_ackreq`:

ieee802154_is_ackreq
====================

.. c:function:: bool ieee802154_is_ackreq (__le16 fc)

    check if acknowledgment request bit is set

    :param __le16 fc:
        frame control bytes in little-endian byteorder



.. _`ieee802154_is_intra_pan`:

ieee802154_is_intra_pan
=======================

.. c:function:: bool ieee802154_is_intra_pan (__le16 fc)

    check if intra pan id communication

    :param __le16 fc:
        frame control bytes in little-endian byteorder



.. _`ieee802154_is_valid_psdu_len`:

ieee802154_is_valid_psdu_len
============================

.. c:function:: bool ieee802154_is_valid_psdu_len (const u8 len)

    check if psdu len is valid

    :param const u8 len:
        psdu len with (MHR + payload + MFR)



.. _`ieee802154_is_valid_psdu_len.available-lengths`:

available lengths
-----------------

0-4        Reserved
5        MPDU (Acknowledgment)
6-8        Reserved
9-127        MPDU



.. _`ieee802154_is_valid_extended_unicast_addr`:

ieee802154_is_valid_extended_unicast_addr
=========================================

.. c:function:: bool ieee802154_is_valid_extended_unicast_addr (const __le64 addr)

    check if extended addr is valid

    :param const __le64 addr:
        extended addr to check



.. _`ieee802154_random_extended_addr`:

ieee802154_random_extended_addr
===============================

.. c:function:: void ieee802154_random_extended_addr (__le64 *addr)

    generates a random extended address

    :param __le64 \*addr:
        extended addr pointer to place the random address

