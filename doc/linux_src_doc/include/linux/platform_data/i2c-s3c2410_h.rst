.. -*- coding: utf-8; mode: rst -*-

=============
i2c-s3c2410.h
=============


.. _`s3c2410_platform_i2c`:

struct s3c2410_platform_i2c
===========================

.. c:type:: s3c2410_platform_i2c

    Platform data for s3c I2C.


.. _`s3c2410_platform_i2c.definition`:

Definition
----------

.. code-block:: c

  struct s3c2410_platform_i2c {
    int bus_num;
    unsigned int flags;
    unsigned int slave_addr;
    unsigned long frequency;
    unsigned int sda_delay;
    void (* cfg_gpio) (struct platform_device *dev);
  };


.. _`s3c2410_platform_i2c.members`:

Members
-------

:``bus_num``:
    The bus number to use (if possible).

:``flags``:
    Any flags for the I2C bus (E.g. S3C_IICFLK_FILTER).

:``slave_addr``:
    The I2C address for the slave device (if enabled).

:``frequency``:
    The desired frequency in Hz of the bus.  This is
    guaranteed to not be exceeded.  If the caller does
    not care, use zero and the driver will select a
    useful default.

:``sda_delay``:
    The delay (in ns) applied to SDA edges.

:``cfg_gpio``:
    A callback to configure the pins for I2C operation.




.. _`s3c_i2c0_set_platdata`:

s3c_i2c0_set_platdata
=====================

.. c:function:: void s3c_i2c0_set_platdata (struct s3c2410_platform_i2c *i2c)

    set platform data for i2c0 device

    :param struct s3c2410_platform_i2c \*i2c:
        The platform data to set, or NULL for default data.



.. _`s3c_i2c0_set_platdata.description`:

Description
-----------

Register the given platform data for use with the i2c0 device. This
call copies the platform data, so the caller can use __initdata for
their copy.

This call will set cfg_gpio if is null to the default platform
implementation.

Any user of s3c_device_i2c0 should call this, even if it is with
NULL to ensure that the device is given the default platform data
as the driver will no longer carry defaults.

