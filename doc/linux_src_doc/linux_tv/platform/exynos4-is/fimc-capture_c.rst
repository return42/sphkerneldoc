.. -*- coding: utf-8; mode: rst -*-

==============
fimc-capture.c
==============



.. _xref_fimc_capture_config_update:

fimc_capture_config_update
==========================

.. c:function:: int fimc_capture_config_update (struct fimc_ctx * ctx)

    apply the camera interface configuration

    :param struct fimc_ctx * ctx:

        _undescribed_



Description
-----------



To be called from within the interrupt handler with fimc.slock
spinlock held. It updates the camera pixel crop, rotation and
image flip in H/W.




.. _xref_fimc_pipeline_try_format:

fimc_pipeline_try_format
========================

.. c:function:: int fimc_pipeline_try_format (struct fimc_ctx * ctx, struct v4l2_mbus_framefmt * tfmt, struct fimc_fmt ** fmt_id, bool set)

    negotiate and/or set formats at pipeline elements

    :param struct fimc_ctx * ctx:
        FIMC capture context

    :param struct v4l2_mbus_framefmt * tfmt:
        media bus format to try/set on subdevs

    :param struct fimc_fmt ** fmt_id:
        fimc pixel format id corresponding to returned **tfmt** (output)

    :param bool set:
        true to set format on subdevs, false to try only




.. _xref_fimc_get_sensor_frame_desc:

fimc_get_sensor_frame_desc
==========================

.. c:function:: int fimc_get_sensor_frame_desc (struct v4l2_subdev * sensor, struct v4l2_plane_pix_format * plane_fmt, unsigned int num_planes, bool try)

    query the sensor for media bus frame parameters

    :param struct v4l2_subdev * sensor:
        pointer to the sensor subdev

    :param struct v4l2_plane_pix_format * plane_fmt:
        provides plane sizes corresponding to the frame layout entries

    :param unsigned int num_planes:

        _undescribed_

    :param bool try:
        true to set the frame parameters, false to query only



Description
-----------

This function is used by this driver only for compressed/blob data formats.




.. _xref_fimc_pipeline_validate:

fimc_pipeline_validate
======================

.. c:function:: int fimc_pipeline_validate (struct fimc_dev * fimc)

    check for formats inconsistencies between source and sink pad of each link

    :param struct fimc_dev * fimc:

        _undescribed_



Description
-----------



Return 0 if all formats match or -EPIPE otherwise.




.. _xref_fimc_sensor_notify:

fimc_sensor_notify
==================

.. c:function:: void fimc_sensor_notify (struct v4l2_subdev * sd, unsigned int notification, void * arg)

    v4l2_device notification from a sensor subdev

    :param struct v4l2_subdev * sd:
        pointer to a subdev generating the notification

    :param unsigned int notification:
        the notification type, must be S5P_FIMC_TX_END_NOTIFY

    :param void * arg:
        pointer to an u32 type integer that stores the frame payload value



Description
-----------

The End Of Frame notification sent by sensor subdev in its still capture
mode. If there is only a single VSYNC generated by the sensor at the
beginning of a frame transmission, FIMC does not issue the LastIrq
(end of frame) interrupt. And this notification is used to complete the
frame capture and returning a buffer to user-space. Subdev drivers should
call this notification from their last 'End of frame capture' interrupt.


