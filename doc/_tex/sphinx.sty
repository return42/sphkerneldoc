%% ===========================================================================
%% modified version of the sphinx.sty from sphinx-doc
%%
%%   :copyright:  Copyright (C) 2016  Markus Heiser
%%   :mail:       markus.heiser@darmarIT.de
%%   :license:    GPL V3.0, see LICENSE for details.
%% ===========================================================================

%
% sphinx.sty
%
% Adapted from the old python.sty, mostly written by Fred Drake,
% by Georg Brandl.
%

\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{sphinx}[2010/01/15 LaTeX package (Sphinx markup)]

\ifx\directlua\undefined\else
% if compiling with lualatex 0.85 or later load compatibility patch issued by
% the LaTeX team for older packages relying on \pdf<name> named primitives.
    \IfFileExists{luatex85.sty}{\RequirePackage{luatex85}}{}
\fi

\@ifclassloaded{memoir}{}{\RequirePackage{fancyhdr}}

\RequirePackage{textcomp}
\RequirePackage{titlesec}
\RequirePackage{tabulary}
\RequirePackage{makeidx}
% For framing code-blocks and warning type notices, and shadowing topics
\RequirePackage{framed}
\newif\ifSphinx@inframed % flag set if we are in a framed environment
\RequirePackage{ifthen}
% The xcolor package draws better fcolorboxes around verbatim code
\IfFileExists{xcolor.sty}{
    \RequirePackage{xcolor}
}{
    \RequirePackage{color}
}
% For highlighted code.
\RequirePackage{fancyvrb}

%% Der LaTeXTranslator verwendet threeparttable, das sollte man bei Gelegenheit
%% mal umbauen, die ganze depart_table Implementierung ist nicht so doll und
%% sollte komplett Ã¼berarbeitet werden.

% For table captions.
\RequirePackage{threeparttable}

% Handle footnotes in tables.
\RequirePackage{footnote}
\makesavenoteenv{tabulary}
% For floating figures in the text.
\RequirePackage{wrapfig}
% Separate paragraphs by space by default.
\RequirePackage{parskip}
% For parsed-literal blocks.
\RequirePackage{alltt}
% Display "real" single quotes in literal blocks.
\RequirePackage{upquote}

% Redefine these colors to your liking in the preamble.
\definecolor{TitleColor}{rgb}{0.126,0.263,0.361}
\definecolor{InnerLinkColor}{rgb}{0.208,0.374,0.486}
\definecolor{OuterLinkColor}{rgb}{0.216,0.439,0.388}
% Redefine these colors to something if you want to have colored
% background and border for code examples.
\definecolor{VerbatimColor}{rgb}{1,1,1}
\definecolor{VerbatimBorderColor}{rgb}{0,0,0}

% Uncomment these two lines to ignore the paper size and make the page
% size more like a typical published manual.
%\renewcommand{\paperheight}{9in}
%\renewcommand{\paperwidth}{8.5in}   % typical squarish manual
%\renewcommand{\paperwidth}{7in}     % O'Reilly ``Programmming Python''

% use pdfoutput for pTeX and dvipdfmx
% when pTeX (\kanjiskip is defined), set pdfoutput to evade \include{pdfcolor}
\ifx\kanjiskip\undefined\else
  \newcount\pdfoutput\pdfoutput=0
\fi

\RequirePackage{graphicx}

% for PDF output, use colors and maximal compression
\newif\ifsphinxpdfoutput\sphinxpdfoutputfalse
\ifx\pdfoutput\undefined\else\ifcase\pdfoutput
  \let\py@NormalColor\relax
  \let\py@TitleColor\relax
\else
  \sphinxpdfoutputtrue
  \input{pdfcolor}
  \def\py@NormalColor{\color[rgb]{0.0,0.0,0.0}}
  \def\py@TitleColor{\color{TitleColor}}
  \pdfcompresslevel=9
\fi\fi

% XeLaTeX can do colors, too
\ifx\XeTeXrevision\undefined\else
  \def\py@NormalColor{\color[rgb]{0.0,0.0,0.0}}
  \def\py@TitleColor{\color{TitleColor}}
\fi

% Increase printable page size (copied from fullpage.sty)
\topmargin 0pt
\advance \topmargin by -\headheight
\advance \topmargin by -\headsep

% attempt to work a little better for A4 users
\textheight \paperheight
\advance\textheight by -2in

\oddsidemargin 0pt
\evensidemargin 0pt
%\evensidemargin -.25in  % for ``manual size'' documents
\marginparwidth 0.5in

\textwidth \paperwidth
\advance\textwidth by -2in


% Style parameters and macros used by most documents here
\raggedbottom
\sloppy
\hbadness = 5000                % don't print trivial gripes

\pagestyle{empty}               % start this way

% Use this to set the font family for headers and other decor:
\newcommand{\py@HeaderFamily}{\sffamily\bfseries}

% Redefine the 'normal' header/footer style when using "fancyhdr" package:
%% \@ifundefined{fancyhf}{}{
%%   % Use \pagestyle{normal} as the primary pagestyle for text.
%%   \fancypagestyle{normal}{
%%     \fancyhf{}
%%     \fancyfoot[LE,RO]{{\py@HeaderFamily\thepage}}
%%     \fancyfoot[LO]{{\py@HeaderFamily\nouppercase{\rightmark}}}
%%     \fancyfoot[RE]{{\py@HeaderFamily\nouppercase{\leftmark}}}
%%     \fancyhead[LE,RO]{{\py@HeaderFamily \@title, \py@release}}
%%     \renewcommand{\headrulewidth}{0.4pt}
%%     \renewcommand{\footrulewidth}{0.4pt}
%%     % define chaptermark with \@chappos when \@chappos is available for Japanese
%%     \ifx\@chappos\undefined\else
%%       \def\chaptermark##1{\markboth{\@chapapp\space\thechapter\space\@chappos\space ##1}{}}
%%     \fi
%%   }
%%   % Update the plain style so we get the page number & footer line,
%%   % but not a chapter or section title.  This is to keep the first
%%   % page of a chapter and the blank page between chapters `clean.'
%%   \fancypagestyle{plain}{
%%     \fancyhf{}
%%     \fancyfoot[LE,RO]{{\py@HeaderFamily\thepage}}
%%     \renewcommand{\headrulewidth}{0pt}
%%     \renewcommand{\footrulewidth}{0.4pt}
%%   }
%% }

% Some custom font markup commands.
%
\newcommand{\strong}[1]{{\textbf{#1}}}
\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\bfcode}[1]{\code{\bfseries#1}}
\newcommand{\email}[1]{\textsf{#1}}
\newcommand{\tablecontinued}[1]{\textsf{#1}}
\newcommand{\titleref}[1]{\emph{#1}}
\newcommand{\menuselection}[1]{\emph{#1}}
\newcommand{\accelerator}[1]{\underline{#1}}
\newcommand{\crossref}[1]{\emph{#1}}
\newcommand{\termref}[1]{\emph{#1}}

\newcommand*{\sphinxAtStartFootnote}{\mbox{ }}

% Redefine the Verbatim environment to allow border and background colors
% and to handle the top caption in a non separable by pagebreak way.
% The original environment is still used for verbatims within tables.
\let\OriginalVerbatim=\Verbatim
\let\endOriginalVerbatim=\endVerbatim

\newcommand\Sphinx@colorbox [2]{%
% #1 will be \fcolorbox or, for first part of frame: \Sphinx@fcolorbox
  #1{VerbatimBorderColor}{VerbatimColor}{%
  % adjust width to be able to handle indentation.
  \begin{minipage}{\dimexpr\linewidth-\@totalleftmargin\relax}%
    #2%
  \end{minipage}%
  }%
}
% use of \color@b@x here is compatible with both xcolor.sty and color.sty
\def\Sphinx@fcolorbox #1#2%
  {\color@b@x {\fboxsep\z@\color{#1}\Sphinx@VerbatimFBox}{\color{#2}}}%

% The title is specified from outside as macro \SphinxVerbatimTitle.
% \SphinxVerbatimTitle is reset to empty after each use of Verbatim.
\newcommand*\SphinxVerbatimTitle {}
% Holder macro for labels of literal blocks. Set-up by LaTeX writer.
\newcommand*\SphinxLiteralBlockLabel {}
\newcommand*\SphinxSetupCaptionForVerbatim [2]
{%
    \needspace{\literalblockneedspace}\vspace{\literalblockcaptiontopvspace}%
% insert a \label via \SphinxLiteralBlockLabel
% reset to normal the color for the literal block caption
    \def\SphinxVerbatimTitle
       {\py@NormalColor\captionof{#1}{\SphinxLiteralBlockLabel #2}\smallskip }%
}

% Inspired and adapted from framed.sty's \CustomFBox with extra handling
% of a non separable by pagebreak caption, and controlled counter stepping.
\newif\ifSphinx@myfirstframedpass

\long\def\Sphinx@VerbatimFBox#1{%
  \leavevmode
  \begingroup
  \ifSphinx@myfirstframedpass\else\firstchoice@false\fi
  \setbox\@tempboxa\hbox{\kern\fboxsep{#1}\kern\fboxsep}%
   \hbox
   {\lower\dimexpr\fboxrule+\fboxsep+\dp\@tempboxa
    \hbox{%
      \vbox{\ifx\SphinxVerbatimTitle\empty\else{\SphinxVerbatimTitle}\fi
            \hrule\@height\fboxrule\relax
            \hbox{\vrule\@width\fboxrule\relax
                  \vbox{\vskip\fboxsep\copy\@tempboxa\vskip\fboxsep}%
                  \vrule\@width\fboxrule\relax}%
            \hrule\@height\fboxrule\relax}%
   }}%
  \endgroup
  % amsmath conditional inhibits counter stepping after first pass.
  \global\Sphinx@myfirstframedpassfalse
}

\renewcommand{\Verbatim}[1][1]{%
  % list starts new par, but we don't want it to be set apart vertically
  \parskip\z@skip
  \smallskip
  % first, let's check if there is a caption
  \ifx\SphinxVerbatimTitle\empty
      % there was no caption. Check if nevertheless a label was set.
      \ifx\SphinxLiteralBlockLabel\empty\else
      % we require some space to be sure hyperlink target from \phantomsection
      % will not be separated from upcoming verbatim by a page break
          \needspace{\literalblockwithoutcaptionneedspace}%
          \phantomsection\SphinxLiteralBlockLabel
      \fi
  \fi
  % non-empty \SphinxVerbatimTitle has label inside it (in case there is one)
  % Customize framed.sty \MakeFramed to glue caption to literal block
  \global\Sphinx@myfirstframedpasstrue
  % via \Sphinx@fcolorbox, will use \Sphinx@VerbatimFBox which inserts title
  \def\FrameCommand   {\Sphinx@colorbox\Sphinx@fcolorbox }%
  \let\FirstFrameCommand\FrameCommand
  % for mid pages and last page portion of (long) split frame:
  \def\MidFrameCommand{\Sphinx@colorbox\fcolorbox }%
  \let\LastFrameCommand\MidFrameCommand
  % The list environement is needed to control perfectly the vertical
  % space.
  \list{}{%
  \setlength\parskip{0pt}%
  \setlength\itemsep{0ex}%
  \setlength\topsep{0ex}%
  \setlength\parsep{0pt}% let's not forget this one!
  \setlength\partopsep{0pt}%
  \setlength\leftmargin{0pt}%
  }%
  \item
  % use a minipage if we are already inside a framed environment
  \relax\ifSphinx@inframed\noindent\begin{\minipage}{\linewidth}\fi
     \MakeFramed {\FrameRestore}%
     \small
    \OriginalVerbatim[#1]%
}
\renewcommand{\endVerbatim}{%
  \endOriginalVerbatim
  \endMakeFramed
  \ifSphinx@inframed\end{minipage}\fi
  \endlist
  % LaTeX environments always revert local changes on exit, here e.g. \parskip
}

% define macro to frame contents and add shadow on right and bottom
\def\Sphinx@shadowsep     {5\p@}       % \p@ means "pt "
\def\Sphinx@shadowsize    {4\p@}
\def\Sphinx@shadowrule    {\fboxrule}
\long\def\Sphinx@ShadowFBox#1{%
  \leavevmode\begingroup
  % first we frame the box #1
  \setbox\@tempboxa
   \hbox{\vrule\@width\Sphinx@shadowrule
         \vbox{\hrule\@height\Sphinx@shadowrule
               \kern\Sphinx@shadowsep
               \hbox{\kern\Sphinx@shadowsep #1\kern\Sphinx@shadowsep}%
               \kern\Sphinx@shadowsep
               \hrule\@height\Sphinx@shadowrule}%
         \vrule\@width\Sphinx@shadowrule}%
  % Now we add the shadow, like \shadowbox from fancybox.sty would do
  \dimen@\dimexpr.5\Sphinx@shadowrule+\Sphinx@shadowsize\relax
  \hbox{\vbox{\offinterlineskip
              \hbox{\copy\@tempboxa\kern-.5\Sphinx@shadowrule
                    % add shadow on right side
                    \lower\Sphinx@shadowsize
                          \hbox{\vrule\@height\ht\@tempboxa \@width\dimen@}%
                    }%
              \kern-\dimen@ % shift back vertically to bottom of frame
              % and add shadow at bottom
              \moveright\Sphinx@shadowsize
                    \vbox{\hrule\@width\wd\@tempboxa \@height\dimen@}%
              }%
        % move left by the size of right shadow so shadow adds no width
        \kern-\Sphinx@shadowsize
       }%
  \endgroup
}

% use framed.sty to allow page breaks in frame+shadow
% works well inside Lists and Quote-like environments
% produced by ``topic'' directive (or local contents)
% could nest if LaTeX writer authorized it
\newenvironment{SphinxShadowBox}
  {\def\FrameCommand {\Sphinx@ShadowFBox }%
   % configure framed.sty not to add extra vertical spacing
   \OuterFrameSep \z@skip
   % the \trivlist will add the vertical spacing on top and bottom which is
   % typical of center environment as used in Sphinx <= 1.4.1
   % the \noindent has the effet of an extra blank line on top, to
   % imitate closely the layout from Sphinx <= 1.4.1; the \FrameHeightAdjust
   % will put top part of frame on this baseline.
   \def\FrameHeightAdjust {\baselineskip}%
   \trivlist\item\noindent
    % use a minipage if we are already inside a framed environment
    \ifSphinx@inframed\begin{minipage}{\linewidth}\fi
    \MakeFramed {\Sphinx@inframedtrue
    % framed.sty puts into "\width" the added width (=2shadowsep+2shadowrule)
    % adjust \hsize to what the contents must use
    \advance\hsize-\width
    % adjust LaTeX parameters to behave properly in indented/quoted contexts
    \FrameRestore
    % typeset the contents as in a minipage (Sphinx <= 1.4.1 used a minipage and
    % itemize/enumerate are therein typeset more tightly, we want to keep
    % that). We copy-paste from LaTeX source code but don't do a real minipage.
    \@pboxswfalse
       % for footnotes, but Sphinx inactivates footnotes in topics
       \def\@mpfn{mpfootnote}\def\thempfn{\thempfootnote}\c@mpfootnote\z@
       \let\@footnotetext\@mpfootnotetext
    \let\@listdepth\@mplistdepth \@mplistdepth\z@
    \@minipagerestore
    \@setminipage
    }%
  }%
  {% insert the "endminipage" code
    \par\unskip
    % handle (currently non existing) minipage style footnotes
    \ifvoid\@mpfootins\else
      \vskip\skip\@mpfootins\normalcolor\footnoterule\unvbox\@mpfootins
    \fi
    \@minipagefalse
   \endMakeFramed
     \ifSphinx@inframed\end{minipage}\fi
   \endtrivlist
  }

% \moduleauthor{name}{email}
\newcommand{\moduleauthor}[2]{}

% \sectionauthor{name}{email}
\newcommand{\sectionauthor}[2]{}

% Augment the sectioning commands used to get our own font family in place,
% and reset some internal data items:
\titleformat{\section}{\Large\py@HeaderFamily}%
            {\py@TitleColor\thesection}{0.5em}{\py@TitleColor}{\py@NormalColor}
\titleformat{\subsection}{\large\py@HeaderFamily}%
            {\py@TitleColor\thesubsection}{0.5em}{\py@TitleColor}{\py@NormalColor}
\titleformat{\subsubsection}{\py@HeaderFamily}%
            {\py@TitleColor\thesubsubsection}{0.5em}{\py@TitleColor}{\py@NormalColor}
\titleformat{\paragraph}{\small\py@HeaderFamily}%
            {\py@TitleColor}{0em}{\py@TitleColor}{\py@NormalColor}

% {fulllineitems} is the main environment for object descriptions.
%
\newcommand{\py@itemnewline}[1]{%
  \@tempdima\linewidth%
  \advance\@tempdima \leftmargin\makebox[\@tempdima][l]{#1}%
}

\newenvironment{fulllineitems}{
  \begin{list}{}{\labelwidth \leftmargin \labelsep 0pt
                 \rightmargin 0pt \topsep -\parskip \partopsep \parskip
                 \itemsep -\parsep
                 \let\makelabel=\py@itemnewline}
}{\end{list}}

% \optional is used for ``[, arg]``, i.e. desc_optional nodes.
\newcommand{\optional}[1]{%
  {\textnormal{\Large[}}{#1}\hspace{0.5mm}{\textnormal{\Large]}}}

\newlength{\py@argswidth}
\newcommand{\py@sigparams}[2]{%
  \parbox[t]{\py@argswidth}{#1\code{)}#2}}
\newcommand{\pysigline}[1]{\item[#1]\nopagebreak}
\newcommand{\pysiglinewithargsret}[3]{%
  \settowidth{\py@argswidth}{#1\code{(}}%
  \addtolength{\py@argswidth}{-2\py@argswidth}%
  \addtolength{\py@argswidth}{\linewidth}%
  \item[#1\code{(}\py@sigparams{#2}{#3}]}

% Production lists
%
\newenvironment{productionlist}{
%  \def\optional##1{{\Large[}##1{\Large]}}
  \def\production##1##2{\\\code{##1}&::=&\code{##2}}
  \def\productioncont##1{\\& &\code{##1}}
  \parindent=2em
  \indent
  \setlength{\LTpre}{0pt}
  \setlength{\LTpost}{0pt}
  \begin{longtable}[l]{lcl}
}{%
  \end{longtable}
}

% Notices / Admonitions
%

% Code adapted from framed.sty's "snugshade" environment.
% Nesting works (inner frames do not allow page breaks).
\newcommand{\py@heavybox}{\par
   \setlength{\FrameRule}{\p@}% 1pt
   \setlength{\FrameSep}{\dimexpr.6\baselineskip-\FrameRule\relax}
   % configure framed.sty's parameters to obtain same vertical spacing
   % as for "light" boxes. We need for this to manually insert parskip glue and
   % revert a skip done by framed before the frame.
    \setlength{\OuterFrameSep}{0pt}
    \vspace{\FrameHeightAdjust}
   % copied/adapted from framed.sty's snugshade
   \def\FrameCommand##1{\hskip\@totalleftmargin
       \fboxsep\FrameSep \fboxrule\FrameRule\fbox{##1}%
       \hskip-\linewidth \hskip-\@totalleftmargin \hskip\columnwidth}%
   % use a minipage if we are already inside a framed environment
   \ifSphinx@inframed
       \noindent\begin{minipage}{\linewidth}
   \else
       \vspace{\parskip}
   \fi
   \MakeFramed {\Sphinx@inframedtrue
     \advance\hsize-\width \@totalleftmargin\z@ \linewidth\hsize
     % minipage initialization copied from LaTeX source code.
     \@pboxswfalse
       % for footnotes
       \def\@mpfn{mpfootnote}\def\thempfn{\thempfootnote}\c@mpfootnote\z@
       \let\@footnotetext\@mpfootnotetext
     \let\@listdepth\@mplistdepth \@mplistdepth\z@
     \@minipagerestore
     \@setminipage }%
   }
\newcommand{\py@endheavybox}{%
   \par\unskip
   % handles footnotes
   \ifvoid\@mpfootins\else
      \vskip\skip\@mpfootins\normalcolor\footnoterule\unvbox\@mpfootins
   \fi
   \@minipagefalse\endMakeFramed
   \ifSphinx@inframed\end{minipage}\fi
   % arrange for similar spacing below frame as for "light" boxes.
   \vskip .4\baselineskip
   }

\newcommand{\py@lightbox}{%
  \par\allowbreak
  \noindent\rule{\linewidth}{0.5pt}\par\nobreak
  {\parskip\z@skip\noindent}%
  }
\newcommand{\py@endlightbox}{%
  \par\nobreak
  {\parskip\z@skip\noindent\rule[.4\baselineskip]{\linewidth}{0.5pt}}\par
  }

% Some are quite plain:
\newcommand{\py@noticestart@note}{\py@lightbox}
\newcommand{\py@noticeend@note}{\py@endlightbox}
\newcommand{\py@noticestart@hint}{\py@lightbox}
\newcommand{\py@noticeend@hint}{\py@endlightbox}
\newcommand{\py@noticestart@important}{\py@lightbox}
\newcommand{\py@noticeend@important}{\py@endlightbox}
\newcommand{\py@noticestart@tip}{\py@lightbox}
\newcommand{\py@noticeend@tip}{\py@endlightbox}

% Others gets more visible distinction:
\newcommand{\py@noticestart@warning}{\py@heavybox}
\newcommand{\py@noticeend@warning}{\py@endheavybox}
\newcommand{\py@noticestart@caution}{\py@heavybox}
\newcommand{\py@noticeend@caution}{\py@endheavybox}
\newcommand{\py@noticestart@attention}{\py@heavybox}
\newcommand{\py@noticeend@attention}{\py@endheavybox}
\newcommand{\py@noticestart@danger}{\py@heavybox}
\newcommand{\py@noticeend@danger}{\py@endheavybox}
\newcommand{\py@noticestart@error}{\py@heavybox}
\newcommand{\py@noticeend@error}{\py@endheavybox}

\newenvironment{notice}[2]{
  \def\py@noticetype{#1}
  \csname py@noticestart@#1\endcsname
  \strong{#2}
}{\csname py@noticeend@\py@noticetype\endcsname}

% Allow the release number to be specified independently of the
% \date{}.  This allows the date to reflect the document's date and
% release to specify the release that is documented.
%
\newcommand{\py@release}{}
\newcommand{\version}{}
\newcommand{\shortversion}{}
\newcommand{\releaseinfo}{}
\newcommand{\releasename}{Release}
\newcommand{\release}[1]{%
  \renewcommand{\py@release}{\releasename\space\version}%
  \renewcommand{\version}{#1}}
\newcommand{\setshortversion}[1]{%
  \renewcommand{\shortversion}{#1}}
\newcommand{\setreleaseinfo}[1]{%
  \renewcommand{\releaseinfo}{#1}}

% Allow specification of the author's address separately from the
% author's name.  This can be used to format them differently, which
% is a good thing.
%
\newcommand{\py@authoraddress}{}
\newcommand{\authoraddress}[1]{\renewcommand{\py@authoraddress}{#1}}

% This sets up the fancy chapter headings that make the documents look
% at least a little better than the usual LaTeX output.
%
%% \@ifundefined{ChTitleVar}{}{
%%   \ChNameVar{\raggedleft\normalsize\py@HeaderFamily}
%%   \ChNumVar{\raggedleft \bfseries\Large\py@HeaderFamily}
%%   \ChTitleVar{\raggedleft \textrm{\Huge\py@HeaderFamily}}
%%   % This creates chapter heads without the leading \vspace*{}:
%%   \def\@makechapterhead#1{%
%%     {\parindent \z@ \raggedright \normalfont
%%       \ifnum \c@secnumdepth >\m@ne
%%         \DOCH
%%       \fi
%%       \interlinepenalty\@M
%%       \DOTI{#1}
%%     }
%%   }
%% }

% Redefine description environment so that it is usable inside fulllineitems.
%
%% \renewcommand{\description}{%
%%   \list{}{\labelwidth\z@%
%%           \itemindent-\leftmargin%
%% 	  \labelsep5pt%
%%           \let\makelabel=\descriptionlabel}}

% Definition lists; requested by AMK for HOWTO documents.  Probably useful
% elsewhere as well, so keep in in the general style support.
%
%% \newenvironment{definitions}{%
%%   \begin{description}%
%%   \def\term##1{\item[##1]\mbox{}\\*[0mm]}
%% }{%
%%   \end{description}%
%% }

% Tell TeX about pathological hyphenation cases:
\hyphenation{Base-HTTP-Re-quest-Hand-ler}


% The following is stuff copied from docutils' latex writer.
%
\newcommand{\optionlistlabel}[1]{\bf #1 \hfill}
\newenvironment{optionlist}[1]
{\begin{list}{}
  {\setlength{\labelwidth}{#1}
   \setlength{\rightmargin}{1cm}
   \setlength{\leftmargin}{\rightmargin}
   \addtolength{\leftmargin}{\labelwidth}
   \addtolength{\leftmargin}{\labelsep}
   \renewcommand{\makelabel}{\optionlistlabel}}
}{\end{list}}

\newlength{\lineblockindentation}
\setlength{\lineblockindentation}{2.5em}
\newenvironment{lineblock}[1]
{\begin{list}{}
  {\setlength{\partopsep}{\parskip}
   \addtolength{\partopsep}{\baselineskip}
   \topsep0pt\itemsep0.15\baselineskip\parsep0pt
   \leftmargin#1}
 \raggedright}
{\end{list}}

% Redefine includgraphics for avoiding images larger than the screen size
% If the size is not specified.
\let\py@Oldincludegraphics\includegraphics

\newbox\image@box%
\newdimen\image@width%
\renewcommand\includegraphics[2][\@empty]{%
  \ifx#1\@empty%
    \setbox\image@box=\hbox{\py@Oldincludegraphics{#2}}%
    \image@width\wd\image@box%
    \ifdim \image@width>\linewidth%
      \setbox\image@box=\hbox{\py@Oldincludegraphics[width=\linewidth]{#2}}%
      \box\image@box%
    \else%
      \py@Oldincludegraphics{#2}%
    \fi%
  \else%
    \py@Oldincludegraphics[#1]{#2}%
  \fi%
}

% to make pdf with correct encoded bookmarks in Japanese
% this should precede the hyperref package
\ifx\kanjiskip\undefined\else
  \usepackage{atbegshi}
  \ifx\ucs\undefined
    \ifnum 42146=\euc"A4A2
      \AtBeginShipoutFirst{\special{pdf:tounicode EUC-UCS2}}
    \else
      \AtBeginShipoutFirst{\special{pdf:tounicode 90ms-RKSJ-UCS2}}
    \fi
  \else
    \AtBeginShipoutFirst{\special{pdf:tounicode UTF8-UCS2}}
  \fi
\fi

% Include hyperref last.
%% \RequirePackage[colorlinks,breaklinks,
%%                 linkcolor=InnerLinkColor,filecolor=OuterLinkColor,
%%                 menucolor=OuterLinkColor,urlcolor=OuterLinkColor,
%%                 citecolor=InnerLinkColor]{hyperref}

\RequirePackage[colorlinks,breaklinks,pdftex,pdfstartview=FitV]{hyperref}


%% settings zum hyperref Paket
%% ---------------------------
%%
%% vergleiche mit den Paketoptionen in latex.hyperref.param.common da kann es zu
%% Ãberschneidungen kommen.

\ifpdf
  \hypersetup{
     a4paper,
     debug=true,
     linkcolor=magenta,           % FÃ¼r Links in der gleichen Seite
     pagecolor=magenta,           % FÃ¼r Links auf andere Seiten
     filecolor=magenta
     urlcolor=blue,               % FÃ¼r Links auf URLs
     breaklinks=true,             % Links dÃ¼rfen umgebrochen werden
     colorlinks=true,
     linktocpage=true,            % make page number, not text, be link on TOC, LOF and LOT
     plainpages=false,            % Forces page anchors to be named by the arabic form of the page number, rather than the formatted form.
     anchorcolor=black,           % Color for anchor text.
     hypertexnames=true,          % use guessable names for links
                                  % in Zusammenhang mit dem listings-Paket fÃ¼hrt
                                  % 'hypertexnames' zu Fehlermeldungen
     naturalnames=true,           % use LATEX-computed names for links
     % -------------
     % PDF-Optionen
     bookmarks=true,
     %bookmarksopen=true,         % Ã¶ffnet alle Ebenen (funktioniert auch im Acrobat)
     bookmarksopenlevel=2,        % funktioniert scheinbar nicht oder der Acrobat kann das nicht
     bookmarksnumbered=false,
     bookmarkstype=toc,           % to specify which toc file to mimic
     pdfhighlight=/P,             % How link buttons behave when selected; /I is for inverse (the default); the other possibilities are /N (no effect), /O (outline), and /P (inset highlighting).
     pdfborder=0 0 0,             % keine Box um die Links!
     citebordercolor=0 0 0,       % Farbe fÃ¼r \cite
     filebordercolor=0 0 0,       % The color of the box around links to files
     menubordercolor=0 0 0,       % The color of the box around Acrobat menu links
     linkbordercolor=0 0 0,       % The color of the box around normal links
     pagebordercolor=0 0 0,       % The color of the box around links to pages
     urlbordercolor=0 0 0,        % The color of the box around links to URLs
     runbordercolor=0 0 0,        % color of border around 'run' links
     baseurl=www.contact.de,
     pdfpagemode=UseOutlines,     % FullScreen, UseThumbs, UseOutlines oder None
     pdfpagelayout=OneColumn,     % TwoColumnLeft, TwoColumnRight, OneColumn oder SinglePage
     pdfstartpage=1,              % Startseite beim Ã¶ffnen des Dokuments
     pdfstartview=FitV,           % 'fit' beim Ã¶ffnen des Dokuments
     pdfview=FitH,                % 'fit' beim Ã¶ffnen einer Seite beim Anspringen Ã¼ber Bookmarks
     pdfcenterwindow=true,        % position the document window in the center of the screen
     pdftitle={darmarIT},
     pdfauthor={dokumentation@contact.de},
     pdfsubject={unknow},
     pdfcreator={darmarIT},
     pdfproducer={darmarIT},
     pdfkeywords={darmarIT},
  }
\else
  \hypersetup{
     a4paper,
     % linkcolor=blue,             % FÃ¼r Links in der gleichen Seite
     % pagecolor=blue,             % FÃ¼r Links auf andere Seiten
     urlcolor=blue,              % FÃ¼r Links auf URLs
     breaklinks=true,            % Links dÃ¼rfen umgebrochen werden
     colorlinks=true,
     linktocpage=true,           % make page number, not text, be link on TOC, LOF and LOT
     plainpages=false,           % Forces page anchors to be named by the arabic form of the page number, rather than the formatted form.
     anchorcolor=black,          % Color for anchor text.
     hypertexnames=true,         % use guessable names for links
                                 % in Zusammenhang mit dem listings-Paket fÃ¼hrt
                                 % 'hypertexnames' zu Fehlermeldungen
     naturalnames=true,          % use LATEX-computed names for links
  }
\fi


% Fix anchor placement for figures with captions.
% (Note: we don't use a package option here; instead, we give an explicit
% \capstart for figures that actually have a caption.)
\RequirePackage{hypcap}

% Set up styles of URL: it should be placed after hyperref
\urlstyle{same}

% From docutils.writers.latex2e
% inline markup (custom roles)
% \DUrole{#1}{#2} tries \DUrole#1{#2}
\providecommand*{\DUrole}[2]{%
  \ifcsname DUrole#1\endcsname%
    \csname DUrole#1\endcsname{#2}%
  \else% backwards compatibility: try \docutilsrole#1{#2}
    \ifcsname docutilsrole#1\endcsname%
      \csname docutilsrole#1\endcsname{#2}%
    \else%
      #2%
    \fi%
  \fi%
}

\providecommand*{\DUprovidelength}[2]{
  \ifthenelse{\isundefined{#1}}{\newlength{#1}\setlength{#1}{#2}}{}
}

\DUprovidelength{\DUlineblockindent}{2.5em}
\ifthenelse{\isundefined{\DUlineblock}}{
  \newenvironment{DUlineblock}[1]{%
    \list{}{\setlength{\partopsep}{\parskip}
            \addtolength{\partopsep}{\baselineskip}
            \setlength{\topsep}{0pt}
            \setlength{\itemsep}{0.15\baselineskip}
            \setlength{\parsep}{0pt}
            \setlength{\leftmargin}{#1}}
    \raggedright
  }
  {\endlist}
}{}


% From footmisc.sty: allows footnotes in titles
\let\FN@sf@@footnote\footnote
\def\footnote{\ifx\protect\@typeset@protect
    \expandafter\FN@sf@@footnote
  \else
    \expandafter\FN@sf@gobble@opt
  \fi
}
\edef\FN@sf@gobble@opt{\noexpand\protect
  \expandafter\noexpand\csname FN@sf@gobble@opt \endcsname}
\expandafter\def\csname FN@sf@gobble@opt \endcsname{%
  \@ifnextchar[%]
    \FN@sf@gobble@twobracket
    \@gobble
}
\def\FN@sf@gobble@twobracket[#1]#2{}

% adjust the margins for footer,
% this works with the jsclasses only (Japanese standard document classes)
\ifx\@jsc@uplatextrue\undefined\else
  \hypersetup{setpagesize=false}
  \setlength\footskip{2\baselineskip}
  \addtolength{\textheight}{-2\baselineskip}
\fi

% fix the double index and bibliography on the table of contents
% in jsclasses (Japanese standard document classes)
\ifx\@jsc@uplatextrue\undefined\else
  \renewcommand{\theindex}{
    \cleardoublepage
    \phantomsection
    \py@OldTheindex
  }
  \renewcommand{\thebibliography}[1]{
    \cleardoublepage
    \phantomsection
    \py@OldThebibliography{1}
  }
\fi

% disable \@chappos in Appendix in pTeX
\ifx\kanjiskip\undefined\else
  \let\py@OldAppendix=\appendix
  \renewcommand{\appendix}{
    \py@OldAppendix
    \gdef\@chappos{}
  }
\fi

% Define literal-block environment
\RequirePackage{newfloat}
\DeclareFloatingEnvironment{literal-block}
\ifx\thechapter\undefined
  \SetupFloatingEnvironment{literal-block}{within=section,placement=h}
\else
  \SetupFloatingEnvironment{literal-block}{within=chapter,placement=h}
\fi
\SetupFloatingEnvironment{literal-block}{name=List}
% control caption around literal-block
\RequirePackage{capt-of}
\RequirePackage{needspace}
% if the left page space is less than \literalblockneedsapce, insert page-break
\newcommand{\literalblockneedspace}{5\baselineskip}
\newcommand{\literalblockwithoutcaptionneedspace}{1.5\baselineskip}
% margin before the caption of literal-block
\newcommand{\literalblockcaptiontopvspace}{0.5\baselineskip}
