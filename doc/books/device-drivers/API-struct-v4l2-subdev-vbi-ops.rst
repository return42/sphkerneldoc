
.. _API-struct-v4l2-subdev-vbi-ops:

==========================
struct v4l2_subdev_vbi_ops
==========================

*man struct v4l2_subdev_vbi_ops(9)*

*4.6.0-rc1*

Callbacks used when v4l device was opened in video mode via the vbi device node.


Synopsis
========

.. code-block:: c

    struct v4l2_subdev_vbi_ops {
      int (* decode_vbi_line) (struct v4l2_subdev *sd, struct v4l2_decode_vbi_line *vbi_line);
      int (* s_vbi_data) (struct v4l2_subdev *sd, const struct v4l2_sliced_vbi_data *vbi_data);
      int (* g_vbi_data) (struct v4l2_subdev *sd, struct v4l2_sliced_vbi_data *vbi_data);
      int (* g_sliced_vbi_cap) (struct v4l2_subdev *sd, struct v4l2_sliced_vbi_cap *cap);
      int (* s_raw_fmt) (struct v4l2_subdev *sd, struct v4l2_vbi_format *fmt);
      int (* g_sliced_fmt) (struct v4l2_subdev *sd, struct v4l2_sliced_vbi_format *fmt);
      int (* s_sliced_fmt) (struct v4l2_subdev *sd, struct v4l2_sliced_vbi_format *fmt);
    };


Members
=======

decode_vbi_line
    video decoders that support sliced VBI need to implement this ioctl. Field p of the v4l2_sliced_vbi_line struct is set to the start of the VBI data that was generated by the
    decoder. The driver then parses the sliced VBI data and sets the other fields in the struct accordingly. The pointer p is updated to point to the start of the payload which can
    be copied verbatim into the data field of the v4l2_sliced_vbi_data struct. If no valid VBI data was found, then the type field is set to 0 on return.

s_vbi_data
    used to generate VBI signals on a video signal. v4l2_sliced_vbi_data is filled with the data packets that should be output. Note that if you set the line field to 0, then
    that VBI signal is disabled. If no valid VBI data was found, then the type field is set to 0 on return.

g_vbi_data
    used to obtain the sliced VBI packet from a readback register. Not all video decoders support this. If no data is available because the readback register contains invalid or
    erroneous data -EIO is returned. Note that you must fill in the 'id' member and the 'field' member (to determine whether CC data from the first or second field should be
    obtained).

g_sliced_vbi_cap
    callback for VIDIOC_SLICED_VBI_CAP ioctl handler code.

s_raw_fmt
    setup the video encoder/decoder for raw VBI.

g_sliced_fmt
    retrieve the current sliced VBI settings.

s_sliced_fmt
    setup the sliced VBI settings.
